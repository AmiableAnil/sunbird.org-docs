swagger: '2.0'
info:
  version: '1.0'
  title: User Feed  API(s)
  description: >-
    - The User Feed API will notify user on various alerts like migration.

    <b>Note:</b> These resources can be used as a part of scripts or programs to allow authorized administrators to manage the users.
host: staging.open-sunbird.org
basePath: /api/
securityDefinitions:
  bearer:
    type: apiKey  # arbitrary name for the security scheme
    in: header # The secrity scheme parameter is in "header"
    name: Authorization # name of the header, query parameter or cookie
  userToken:
    type: apiKey  # arbitrary name for the security scheme
    in: header # The secrity scheme parameter is in "header"
    name: x-authenticated-user-token # name of the header, query parameter or cookie
schemes:
  - https
paths:
  /user/v1/feed/{User_ID}:
    get:
      description: >-
        This API is used for searching a specific user, the user search is based on the unique ID of the user
          - The endpoint for **Get User Feed by User ID** is `/user/v1/feed/{User_ID}`

      summary: Get User Feed by User ID
      tags:
        - User Feed APIs
      operationId: Get User by User ID
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: User_ID
          type: string
          required: true
          description: 'Please append a valid User Id To the Request URL and if user need any specific values like , profile completeness ,missingFields,topic Ex: ?Fields=completeness,missingFields,topic'
        - name: ts
          in: header
          required: false
          type: string
          description: 'Timestamp at which given API request is sent.'
        - name: X-msgid
          in: header
          required: false
          type: string
          description: 'This ID uniquely identifies a request if the same API is executed multiple times.'
        - name: Authorization
          in: header
          required: true
          type: string
          description: 'Specify authorization key (format: Bearer api-key) received from administrator when performing given API request.'
        - name: X-Authenticated-User-Token
          in: header
          required: true
          type: string
          description: >-
            Access token of registered user performing given API request.
      responses:
        '200':
          description: 'OK ! Successful operation."Get User by User ID" operation was successfully executed.'
          schema:
            $ref: '#/definitions/CreateUserSingleResp'
        '400':
          description: 'BAD REQUEST,"Get User by User ID" operation failed ! The possible reason for failure is that you may have missed providing input for a mandatory parameter.'
          schema:
            $ref: '#/definitions/UserErrorResponse'
        '404':
          description: 'Resource not found'
          schema:
            $ref: '#/definitions/UserErrorResponse'
        '500':
          description: >-
            'INTERNAL SERVER ERROR. We track these errors automatically and try to set it right at the earliest. Try refreshing the page. If the problem persists contact us at info@sunbird.org.'
          schema:
            $ref: '#/definitions/UserErrorResponse'
      security:
        - bearer: []
      x-unitTests:
        - request:
            method: GET
            uri: /user/v1/read/{User_Id}
            headers:
              x-authenticated-user-token: '{{user_id}}'
              Content-Type: application/json
              ts: 2017-05-25 10:18:56:578+0530
              Authorization: Bearer {{api_key}}
          expectedResponse:
            x-allowExtraHeaders: true
            x-bodyMatchMode: NONE
            x-arrayOrderedMatching: false
            x-arrayCheckCount: false
            x-matchResponseSchema: true
            headers: {}
          x-testShouldPass: true
          x-testEnabled: true
          x-testName: Get User by User ID
          x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false



definitions:
  UnAuthorizedResponse:
    allOf:
      - $ref: '#/definitions/ResultWithEmptyBody'
      - $ref: 'https://raw.githubusercontent.com/project-sunbird/project-sunbird.github.io/dev/apis/definitions/envelope.yaml#/ApiResponse'
  ResultStatus:
    type: object
    properties:
      status:
        type: string
        description: Success or Failure
  EmptyResult:
    type: object
    properties:
      result:
        type: object
        description: Empty Result
  UserErrorResponse:
    type: object
    allOf:
      - $ref: 'https://raw.githubusercontent.com/project-sunbird/project-sunbird.github.io/dev/apis/definitions/envelope.yaml#/ApiResponse'
      - $ref: '#/definitions/EmptyResult'
  ResultWithEmptyBody:
    type: object
    properties:
      result:
        $ref: '#/definitions/ResultStatus'
  CreateUserSingleResp:
    description: Represents the  hold single userObject request
    type: object
    properties:
      request:
        type: object
        allOf:
          - $ref: 'https://raw.githubusercontent.com/project-sunbird/project-sunbird.github.io/dev/apis/definitions/envelope.yaml#/ApiRequest'

